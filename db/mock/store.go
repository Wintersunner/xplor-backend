// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/Wintersunner/xplor/db/sqlc (interfaces: Store)
//
// Generated by this command:
//
//	mockgen -package mockdb -destination db/mock/store.go github.com/Wintersunner/xplor/db/sqlc Store
//
// Package mockdb is a generated GoMock package.
package mockdb

import (
	context "context"
	sql "database/sql"
	reflect "reflect"

	db "github.com/Wintersunner/xplor/db/sqlc"
	gomock "go.uber.org/mock/gomock"
)

// MockStore is a mock of Store interface.
type MockStore struct {
	ctrl     *gomock.Controller
	recorder *MockStoreMockRecorder
}

// MockStoreMockRecorder is the mock recorder for MockStore.
type MockStoreMockRecorder struct {
	mock *MockStore
}

// NewMockStore creates a new mock instance.
func NewMockStore(ctrl *gomock.Controller) *MockStore {
	mock := &MockStore{ctrl: ctrl}
	mock.recorder = &MockStoreMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStore) EXPECT() *MockStoreMockRecorder {
	return m.recorder
}

// CreateFizzBuzz mocks base method.
func (m *MockStore) CreateFizzBuzz(arg0 context.Context, arg1 db.CreateFizzBuzzParams) (sql.Result, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateFizzBuzz", arg0, arg1)
	ret0, _ := ret[0].(sql.Result)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateFizzBuzz indicates an expected call of CreateFizzBuzz.
func (mr *MockStoreMockRecorder) CreateFizzBuzz(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateFizzBuzz", reflect.TypeOf((*MockStore)(nil).CreateFizzBuzz), arg0, arg1)
}

// GetFizzBuzz mocks base method.
func (m *MockStore) GetFizzBuzz(arg0 context.Context, arg1 int64) (db.Fizzbuzz, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFizzBuzz", arg0, arg1)
	ret0, _ := ret[0].(db.Fizzbuzz)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetFizzBuzz indicates an expected call of GetFizzBuzz.
func (mr *MockStoreMockRecorder) GetFizzBuzz(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFizzBuzz", reflect.TypeOf((*MockStore)(nil).GetFizzBuzz), arg0, arg1)
}

// ListFizzBuzzes mocks base method.
func (m *MockStore) ListFizzBuzzes(arg0 context.Context) ([]db.Fizzbuzz, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListFizzBuzzes", arg0)
	ret0, _ := ret[0].([]db.Fizzbuzz)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListFizzBuzzes indicates an expected call of ListFizzBuzzes.
func (mr *MockStoreMockRecorder) ListFizzBuzzes(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListFizzBuzzes", reflect.TypeOf((*MockStore)(nil).ListFizzBuzzes), arg0)
}
